{
  "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_GRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_ZRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Premium_LRS"
      ]
    },
    "eventHubName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Event Hub"
      }
    },
    "blobContainer": {
      "type": "string",
      "metadata": {
        "description": "Name of the blob container in the Azure Storage account."
      }
    },
    "inputBlobFolder": {
      "type": "string",
      "metadata": {
        "description": "The folder in the blob container that has the input file."
      }
    },
    "outputBlobFolder": {
      "type": "string",
      "metadata": {
        "description": "The folder in the blob container that will hold the transformed data."
      }
    },
    "hiveScriptFile": {
      "type": "string",
      "metadata": {
        "description": "Name of the hive query (HQL) file."
      }
    },
    "hiveScriptStorageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Storage account name where the hive script is stored."
      }
    },
    "hiveScriptStorageAccountKey": {
      "type": "string",
      "metadata": {
        "description": "Storage account key of blob storage where the hive script is stored."
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "apiVersion": "2015-08-01",
    "uniqueIdentifier": "[uniqueString(resourceGroup().id)]",
    "storageAccountName": "[concat(resourceGroup().name, variables('uniqueIdentifier'))]",
    "namespaceName": "[concat(resourceGroup().name, variables('uniqueIdentifier'), '-ns')]",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "authRuleResourceId": "[resourceId('Microsoft.EventHub/namespaces/authorizationRules', variables('namespaceName'), variables('defaultSASKeyName'))]",
    "asaCCUJobName": "ccu",
    "asaCCUJobQuery": "Select\r\n\tCount(*) as numUsers,\r\n\tSystem.timestamp as time\r\nInto BlobSink\r\nFrom\r\n\tInput timestamp by ClientUtc\r\nWhere\r\n\tEvent = 'heartbeat'\r\n\tor Event = 'session-start'\r\nGroup By\r\n\ttumblingwindow(second, 1), time",
    "asaCCUConsumerGroupName": "asaCCU",
    "asaCCUContainerName": "ccus",
    "asaRawDataContainerName": "rawdata",
    "asaRawJobName": "rawdata",
    "asaRawJobQuery": "Select\r\n\tCount(*) as numUsers,\r\n\tSystem.timestamp as time\r\nInto BlobSink\r\nFrom\r\n\tInput timestamp by ClientUtc\r\nWhere\r\n\tEvent = 'heartbeat'\r\n\tor Event = 'session-start'\r\nGroup By\r\n\ttumblingwindow(second, 1), time",
    "asaRawConsumerGroupName": "asaRaw",
    "ehVersion": "2015-08-01",
    "dataFactoryName": "[concat('HiveTransformDF', variables('uniqueIdentifier'))]",
    "azureStorageLinkedServiceName": "AzureStorageLinkedService",
    "azureHiveStorageLinkedServiceName": "AzureHiveStorageLinkedService",
    "hdInsightOnDemandLinkedServiceName": "HDInsightOnDemandLinkedService",
    "blobInputDatasetName": "AzureBlobInput",
    "blobOutputDatasetName": "AzureBlobOutput",
    "pipelineName": "DAUPipeline"
  },
  "resources": [
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "[variables('ehVersion')]",
      "name": "[variables('namespaceName')]",
      "type": "Microsoft.EventHub/Namespaces",
      "location": "[variables('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "resources": [
        {
          "apiVersion": "[variables('ehVersion')]",
          "name": "[parameters('eventHubName')]",
          "type": "EventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('namespaceName'))]"
          ],
          "properties": {
            "path": "[parameters('eventHubName')]"
          },
          "resources": [
            {
              "apiVersion": "[variables('ehVersion')]",
              "name": "[variables('asaCCUConsumerGroupName')]",
              "type": "ConsumerGroups",
              "dependsOn": [
                "[parameters('eventHubName')]"
              ],
              "properties": {}
            },
            {
              "apiVersion": "[variables('ehVersion')]",
              "name": "[variables('asaRawConsumerGroupName')]",
              "type": "ConsumerGroups",
              "dependsOn": [
                "[parameters('eventHubName')]"
              ]
            }
          ]
        }
      ]
    },
    {
      "apiVersion": "2015-09-01",
      "type": "Microsoft.StreamAnalytics/StreamingJobs",
      "name": "[variables('asaRawJobName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "sku": {
          "name": "Standard"
        },
        "outputStartMode": "LastOutputEventTime",
        "inputs": [
          {
            "name": "Input",
            "properties": {
              "type": "stream",
              "serialization": {
                "type": "JSON",
                "properties": {
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.ServiceBus/EventHub",
                "properties": {
                  "eventHubName": "[parameters('eventHubName')]",
                  "serviceBusNamespace": "[variables('namespaceName')]",
                  "sharedAccessPolicyName": "[variables('defaultSASKeyName')]",
                  "sharedAccessPolicyKey": "[listkeys(variables('authRuleResourceId'), variables('apiVersion')).primaryKey]",
                  "consumerGroupName": "[variables('asaRawConsumerGroupName')]"
                }
              }
            }
          }
        ],
        "transformation": {
          "name": "[variables('asaRawJobName')]",
          "properties": {
            "streamingUnits": 1,
            "query": "[variables('asaRawJobQuery')]"
          }
        },
        "outputs": [
          {
            "name": "BlobSinkCsv",
            "properties": {
              "serialization": {
                "type": "CSV",
                "properties": {
                  "fieldDelimiter": ",",
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.Storage/Blob",
                "properties": {
                  "storageAccounts": [
                    {
                      "accountName": "[variables('storageAccountName')]",
                      "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').key1]"
                    }
                  ],
                  "container": "[variables('asaRawDataContainerName')]",
                  "pathPattern": "arwdata",
                  "dateFormat": "yyyy/MM/dd",
                  "timeFormat": "HH"
                }
              }
            }
          },
          {
            "name": "BlobSinkJson",
            "properties": {
              "serialization": {
                "type": "JSON",
                "properties": {
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.Storage/Blob",
                "properties": {
                  "storageAccounts": [
                    {
                      "accountName": "[variables('storageAccountName')]",
                      "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').key1]"
                    }
                  ],
                  "container": "[variables('asaRawDataContainerName')]",
                  "pathPattern": "rawdata",
                  "dateFormat": "yyyy/MM/dd",
                  "timeFormat": "HH"
                }
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', variables('namespaceName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
      {
        "apiVersion": "2015-09-01",
        "comments": "Azure stream analytics job for calculating the concurrent users",
        "type": "Microsoft.StreamAnalytics/StreamingJobs",
        "name": "[variables('asaCCUJobName')]",
        "location": "[resourceGroup().location]",
        "properties": {
          "sku": {
            "name": "Standard"
          },
          "outputStartMode": "LastOutputEventTime",
          "inputs": [
            {
              "name": "Input",
              "properties": {
                "type": "stream",
                "serialization": {
                  "type": "JSON",
                  "properties": {
                    "encoding": "UTF8"
                  }
                },
                "datasource": {
                  "type": "Microsoft.ServiceBus/EventHub",
                  "properties": {
                    "eventHubName": "[parameters('eventHubName')]",
                    "serviceBusNamespace": "[variables('namespaceName')]",
                    "sharedAccessPolicyName": "[variables('defaultSASKeyName')]",
                    "sharedAccessPolicyKey": "[listkeys(variables('authRuleResourceId'), variables('apiVersion')).primaryKey]",
                    "consumerGroupName": "[variables('asaCCUConsumerGroupName')]"
                  }
                }
              }
            }
          ],
          "transformation": {
            "name": "[variables('asaCCUJobName')]",
            "properties": {
              "streamingUnits": 1,
              "query": "[variables('asaCCUJobQuery')]"
            }
          },
          "outputs": [
            {
              "name": "BlobSink",
              "properties": {
                "serialization": {
                  "type": "CSV",
                  "properties": {
                    "fieldDelimiter": ",",
                    "encoding": "UTF8"
                  }
                },
                "datasource": {
                  "type": "Microsoft.Storage/Blob",
                  "properties": {
                    "storageAccounts": [
                      {
                        "accountName": "[variables('storageAccountName')]",
                        "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').key1]"
                      }
                    ],
                    "container": "[variables('asaCCUContainerName')]",
                    "pathPattern": "sessions",
                    "dateFormat": "yyyy/MM/dd",
                    "timeFormat": "HH"
                  }
                }
              }
            }
          ]
        },
        "dependsOn": [
          "[resourceId('Microsoft.EventHub/namespaces', variables('namespaceName'))]",
          "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
        ]
      },
      {
        "name": "[variables('dataFactoryName')]",
        "apiVersion": "2015-10-01",
        "type": "Microsoft.DataFactory/datafactories",
        "location": "[resourceGroup().location]",
        "resources": [
          {
            "type": "linkedservices",
            "name": "[variables('azureStorageLinkedServiceName')]",
            "dependsOn": [
              "[variables('dataFactoryName')]",
              "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "apiVersion": "2015-10-01",
            "properties": {
              "type": "AzureStorage",
              "description": "Azure Storage linked service",
              "typeProperties": {
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').key1)]"
              }
            }
          },
          {
            "type": "linkedservices",
            "name": "[variables('azureHiveStorageLinkedServiceName')]",
            "dependsOn": [
              "[variables('dataFactoryName')]",
              "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "apiVersion": "2015-10-01",
            "properties": {
              "type": "AzureStorage",
              "description": "Azure Storage that contains the Hive script - to be a SAS linked service later",
              "typeProperties": {
                "connectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('hiveScriptStorageAccountName'),';AccountKey=', parameters('hiveScriptStorageAccountKey'))]"
              }
            }
          },
          {
            "type": "linkedservices",
            "name": "[variables('hdInsightOnDemandLinkedServiceName')]",
            "dependsOn": [
              "[variables('dataFactoryName')]",
              "[variables('azureStorageLinkedServiceName')]"
            ],
            "apiVersion": "2015-10-01",
            "properties": {
              "type": "HDInsightOnDemand",
              "typeProperties": {
                "clusterSize": 8,
                "version": "3.2",
                "timeToLive": "00:30:00",
                "osType": "linux",
                "linkedServiceName": "[variables('azureStorageLinkedServiceName')]"
              }
            }
          },
          {
            "type": "datasets",
            "name": "[variables('blobInputDatasetName')]",
            "dependsOn": [
              "[variables('dataFactoryName')]",
              "[variables('azureStorageLinkedServiceName')]"
            ],
            "apiVersion": "2015-10-01",
            "properties": {
              "type": "AzureBlob",
              "linkedServiceName": "[variables('azureStorageLinkedServiceName')]",
              "typeProperties": {
                "folderPath": "[concat(parameters('blobContainer'), '/', parameters('inputBlobFolder'))]",
                "format": {
                  "type": "TextFormat",
                  "columnDelimiter": ","
                }
              },
              "availability": {
                "frequency": "Day",
                "interval": 1
              },
              "external": true
            }
          },
          {
            "type": "datasets",
            "name": "[variables('blobOutputDatasetName')]",
            "dependsOn": [
              "[variables('dataFactoryName')]",
              "[variables('azureStorageLinkedServiceName')]"
            ],
            "apiVersion": "2015-10-01",
            "properties": {
              "type": "AzureBlob",
              "linkedServiceName": "[variables('azureStorageLinkedServiceName')]",
              "typeProperties": {
                "folderPath": "[concat(parameters('blobContainer'), '/', parameters('outputBlobFolder'))]",
                "format": {
                  "type": "TextFormat",
                  "columnDelimiter": ","
                }
              },
              "availability": {
                "frequency": "Day",
                "interval": 1
              }
            }
          },
          {
            "type": "datapipelines",
            "name": "[variables('pipelineName')]",
            "dependsOn": [
              "[variables('dataFactoryName')]",
              "[variables('azureStorageLinkedServiceName')]",
              "[variables('azureHiveStorageLinkedServiceName')]",
              "[variables('hdInsightOnDemandLinkedServiceName')]",
              "[variables('blobInputDatasetName')]",
              "[variables('blobOutputDatasetName')]"
            ],
            "apiVersion": "2015-10-01",
            "properties": {
              "description": "Pipeline that transforms data using Hive script.",
              "activities": [
                {
                  "type": "HDInsightHive",
                  "typeProperties": {
                    "scriptPath": "[parameters('hiveScriptFile')]",
                    "scriptLinkedService": "[variables('azureHiveStorageLinkedServiceName')]",
                    "defines": {
                      "rawevents": "[concat('wasbs://', parameters('blobContainer'), '@', variables('storageAccountName'), '.blob.core.windows.net/', parameters('inputBlobFolder'), '/')]",
                      "rawinfo": "[concat('wasbs://', parameters('blobContainer'), '@', variables('storageAccountName'), '.blob.core.windows.net/rawinfo/')]",
                      "dau": "[concat('wasbs://', parameters('blobContainer'), '@', variables('storageAccountName'), '.blob.core.windows.net/dailyactiveusers')]",
                      "nddau": "[concat('wasbs://', parameters('blobContainer'), '@', variables('storageAccountName'), '.blob.core.windows.net/nondistinct-dailyactiveusers')]",
                      "mau": "[concat('wasbs://', parameters('blobContainer'), '@', variables('storageAccountName'), '.blob.core.windows.net/monthlyactiveusers')]"
                    }
                  },
                  "inputs": [
                    {
                      "name": "[variables('blobInputDatasetName')]"
                    }
                  ],
                  "outputs": [
                    {
                      "name": "[variables('blobOutputDatasetName')]"
                    }
                  ],
                  "policy": {
                    "concurrency": 1,
                    "retry": 2
                  },
                  "scheduler": {
                    "frequency": "Day",
                    "interval": 1
                  },
                  "name": "RunDAUHiveActivity",
                  "linkedServiceName": "[variables('hdInsightOnDemandLinkedServiceName')]"
                }
              ],
              "start": "2016-11-06T00:16:00Z",
              "end": "2016-11-06T00:17:00Z",
              "isPaused": false
            }
          }
        ]
      }
  ],
  "outputs": {
    "NamespaceConnectionString": {
      "type": "string",
      "value": "[listkeys(variables('authRuleResourceId'), variables('apiVersion')).primaryConnectionString]"
    },
    "SharedAccessPolicyPrimaryKey": {
      "type": "string",
      "value": "[listkeys(variables('authRuleResourceId'), variables('apiVersion')).primaryKey]"
    }
  }
}