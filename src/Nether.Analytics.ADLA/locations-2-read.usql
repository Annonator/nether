DECLARE @YEAR int = 2017;
DECLARE @MONTH int = 4;
DECLARE @DAY int = 27;

DECLARE @INPUT_FILE string = String.Concat( "/", @YEAR.ToString(), "/", @MONTH.ToString(), "/", @DAY.ToString(), "/locations.csv");
DECLARE @OUTPUT_FILE string = "/output/counts.csv";

@LOCATIONS_TEMP =
    EXTRACT type string,
            version string,
            enqueueTime DateTime,
            dequeueTime DateTime,
            clientUtcTime DateTime,
            gameSessionId string,
            lat float,
            lon float,
            geoHash double,
            geoHashPrecision int,
            geoHashCenterlat float,
            geoHashCenterlon float,
            country string,
            district string,
            city string,
            properties string
    FROM @INPUT_FILE
    USING Extractors.Text(delimiter: '|', encoding: Encoding.UTF8, skipFirstNRows: 1);

INSERT INTO LocationEvents_1_0_0
SELECT type, 
       version, 
       enqueueTime, 
       dequeueTime, 
       clientUtcTime, 
       gameSessionId, 
       lat, 
       lon, 
       geoHash, 
       geoHashPrecision, 
       geoHashCenterlat, 
       geoHashCenterlon, 
       country, 
       district, 
       city, 
       properties,
       PERCENTILE_DISC(0.5) WITHIN GROUP ( ORDER BY lat ASC ) OVER ( PARTITION BY geoHash ) AS randomLat,
       PERCENTILE_DISC(0.5) WITHIN GROUP ( ORDER BY lon ASC ) OVER ( PARTITION BY geoHash ) AS randomLon
FROM @LOCATIONS_TEMP;


@RawCounts = 
    SELECT geoHash,
           geoHashCenterlat,
           geoHashCenterlon,
           PERCENTILE_DISC(0.5) WITHIN GROUP ( ORDER BY lat ASC ) OVER ( PARTITION BY geoHash ) AS medianLatitude,
           COUNT(*) AS numPts
    FROM @LOCATIONS_TEMP
    GROUP BY geoHash, geoHashCenterlat, geoHashCenterlon
    ORDER BY numPts DESC 
    FETCH 10 ROWS;

OUTPUT @RawCounts
TO @OUTPUT_FILE
USING Outputters.Csv();
