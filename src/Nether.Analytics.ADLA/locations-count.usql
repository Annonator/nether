DECLARE @YEAR int = 2017;
DECLARE @MONTH int = 4;
DECLARE @DAY int = 27;

DECLARE @MONTH_STR string = (@MONTH < 10) ? String.Concat("0", @MONTH.ToString()) : @MONTH.ToString();
DECLARE @DAY_STR string = (@DAY < 10) ? String.Concat("0", @DAY.ToString()) : @DAY.ToString();
DECLARE @INPUT_FILE string = String.Concat( "/", @YEAR.ToString(), "/", @MONTH_STR, "/", @DAY_STR, "/locations.csv");
DECLARE @OUTPUT_FILE string = String.Concat( "/output/locations/", @YEAR.ToString(), @MONTH_STR, @DAY_STR, ".csv");


@LOCATIONS_RAW =
    EXTRACT type string,
            version string,
            enqueueTime DateTime,
            dequeueTime DateTime,
            clientUtcTime DateTime,
            gameSessionId string,
            lat float,
            lon float,
            geoHash double,
            geoHashPrecision int,
            geoHashCenterlat float,
            geoHashCenterlon float,
            country string,
            district string,
            city string,
            properties string
    FROM @INPUT_FILE
    USING Extractors.Text(delimiter: '|', encoding: Encoding.UTF8, skipFirstNRows: 1);

@LOCATIONS_TMP =
SELECT type, 
       version, 
       enqueueTime, 
       dequeueTime, 
       clientUtcTime, 
       gameSessionId, 
       lat, 
       lon, 
       geoHash, 
       geoHashPrecision, 
       geoHashCenterlat, 
       geoHashCenterlon, 
       country, 
       district, 
       city, 
       properties,
       PERCENTILE_DISC(0.5) WITHIN GROUP ( ORDER BY lat ASC ) OVER ( PARTITION BY geoHash ) AS randomLat,
       PERCENTILE_DISC(0.5) WITHIN GROUP ( ORDER BY lon ASC ) OVER ( PARTITION BY geoHash ) AS randomLon
FROM @LOCATIONS_RAW;


@RawCounts = 
    SELECT geoHash,
           COUNT(*) AS numPts
    FROM @LOCATIONS_TMP
    GROUP BY geoHash, randomLat, randomLon;


INSERT INTO GeoHashCoordinates
SELECT geoHash,
       MAP_AGG( lat, lon)
FROM @LOCATIONS_RAW;



OUTPUT @RawCounts
TO @OUTPUT_FILE
USING Outputters.Csv();
